{"list":[{"title":"CallbacksMap","link":"<a href=\"global.html#CallbacksMap\">CallbacksMap</a>"},{"title":"Combobox","link":"<a href=\"global.html#Combobox\">Combobox</a>"},{"title":"Field","link":"<a href=\"global.html#Field\">Field</a>"},{"title":"From","link":"<a href=\"global.html#From\">From</a>"},{"title":"PickReturns","link":"<a href=\"global.html#PickReturns\">PickReturns</a>"},{"title":"SObject","link":"<a href=\"global.html#SObject\">SObject</a>"},{"title":"Toast","link":"<a href=\"global.html#Toast\">Toast</a>"},{"title":"Toaster","link":"<a href=\"global.html#Toaster\">Toaster</a>","description":"Short hand for sending toast message"},{"title":"Toaster","link":"<a href=\"global.html#Toaster\">Toaster</a>"},{"title":"bind","link":"<a href=\"global.html#bind\">bind</a>","description":"Automatically assign the changed input to the bound variable"},{"title":"comboboxify","link":"<a href=\"global.html#comboboxify\">comboboxify</a>"},{"title":"comboboxify~getValueForKey","link":"<a href=\"global.html#comboboxify#~getValueForKey\">getValueForKey</a>"},{"title":"comboboxify~getValueFromStringPath","link":"<a href=\"global.html#comboboxify#~getValueFromStringPath\">getValueFromStringPath</a>"},{"title":"comboboxify~mappedObject","link":"<a href=\"global.html#comboboxify#~mappedObject\">mappedObject</a>"},{"title":"comboboxify~templater","link":"<a href=\"global.html#comboboxify#~templater\">templater</a>"},{"title":"compose","link":"<a href=\"global.html#compose\">compose</a>"},{"title":"createModal","link":"<a href=\"global.html#createModal\">createModal</a>"},{"title":"deepenedObject","link":"<a href=\"global.html#deepenedObject\">deepenedObject</a>"},{"title":"deleteRecord","link":"<a href=\"global.html#deleteRecord\">deleteRecord</a>"},{"title":"interpolate","link":"<a href=\"global.html#interpolate\">interpolate</a>","description":"Useful method to pass as an input a custom label formated as an ES6 template literal\nlike this : Hello ${name}\nTake an object of the shape as a second parameter : {name: 'John Doe'}"},{"title":"isFormValid","link":"<a href=\"global.html#isFormValid\">isFormValid</a>","description":"checks all inputs marked as `[data-checkable]` in the template"},{"title":"pick","link":"<a href=\"global.html#pick\">pick</a>"},{"title":"saveRecord","link":"<a href=\"global.html#saveRecord\">saveRecord</a>"},{"title":"setDataStyle","link":"<a href=\"global.html#setDataStyle\">setDataStyle</a>","description":"Will plug your styles to an html element that has the attribute [data-style] on it"},{"title":"useDML","link":"<a href=\"global.html#useDML\">useDML</a>","description":"Gives access to the `saveRecord` method  in the component context."},{"title":"useFormValidation","link":"<a href=\"global.html#useFormValidation\">useFormValidation</a>","description":"Gives access to the class property isFormValid, \nreturning either true or false and, if false, shows the field validation errors"},{"title":"usePoller","link":"<a href=\"global.html#usePoller\">usePoller</a>"},{"title":"usePollerOptions","link":"<a href=\"global.html#usePollerOptions\">usePollerOptions</a>"},{"title":"useReactiveBinding","link":"<a href=\"global.html#useReactiveBinding\">useReactiveBinding</a>","description":"Binds together an input to a class property"},{"title":"useRecordFields","link":"<a href=\"global.html#useRecordFields\">useRecordFields</a>","description":"Gives access to `<AnyObject>__c` property.\nIt's a map of the fields api name to their values. Can be edited and saved by passing the object to the `saveRecord` method provided by the mixin `useSaveRecord`"},{"title":"useRelatedRecords","link":"<a href=\"global.html#useRelatedRecords\">useRelatedRecords</a>","description":"Binds together an input to a class property"},{"title":"useSObject","link":"<a href=\"global.html#useSObject\">useSObject</a>","description":"Provides two property on the class : {<SOBjectName>__ref, <SObjectName__info>}\n<SOBjectName>__ref is useful if you want to build a form to create a record of that type as it gives you\nan object initialized with all keys corresponding to what you've provided in the fields argument and each value initialized\nas an empty string.\n<SOBjectName>__info is useful to quickly access SObject related info such as fields label, picklist values, recordtype infos etc"},{"title":"useUnscopedStyling","link":"<a href=\"global.html#useUnscopedStyling\">useUnscopedStyling</a>","description":"Will plug an external stylesheet to an element that has an attribute [data-style]"}]}